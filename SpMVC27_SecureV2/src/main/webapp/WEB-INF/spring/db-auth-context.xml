<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- StandardPBE...클래스가 암호문을 복호화할때 사용할 salt 키를 제공해줄 보조 클래스
서버,컴퓨터에 설정된 환경변수값을 읽어서 salt로 사용할수 있도록 만들어주는 클래스
<property name="password" value="BIZ.COM"/> salt 문자를 아무나 볼수있는 평문으로 설정하기
<property name="passwordEnvName" value="BIZ.COM"/> salt 문자열을 환경변수에서 가져와서 사용하라 
-->
<bean id="envConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
<property name="algorithm" value="PBEWithMD5AndDES"></property>
<property name="passwordEnvName" value="BIZ.COM"></property>
</bean>

<!-- Encrypt.. 클래스가 db.connection.properties 파일의 암호화된 문자열을 읽어서 복호화 한후 일반 문자열로 변환하여 
property로 사용할수 있ㄷ록 도와주는 보조 클래스 
Environment...클래스가 제공하는 Salt와, 알고리즘 설정을 사용하여 복호화를 한다 -->
<bean id="encConvert" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
<property name="config" ref="envConfig"></property>
</bean>

<!-- db.connection.properties 로 부터 usrname과 pass를 가져와서 사용하기 위한 준비
Encrypt... 클래스는 StandardPBE... 클래스를 사용하여 db.connection.properties 파일에 저장된 암호화 문자열을 평문 문자열로 복호화 한다. 
-->
<bean class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
<constructor-arg ref="encConvert"></constructor-arg>
<property name="fileEncoding" value="UTF-8"></property>
<property name="locations">
<list>
<value>/WEB-INF/spring/db.connection.properties</value>
</list>
</property>
</bean>

<!-- secutiry 인증과 관련된 user DB 설정부분 -->
<!-- dataSource -->
<!-- driverClassName,url,username,password -->
<!-- useSSL=false : 5.7에서 issue
보안연결을 설정하지 않으면 mysql 서버에 접근하지 못하던 문제를 해결하는 방법 -->
<bean id="authDB" class="org.apache.commons.dbcp2.BasicDataSource">
<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
<property name="url" value="jdbc:mysql://localhost:3306/secure?serverTimezone=Asia/Seoul"></property>
<property name="username" value="${mysql.username}"></property>
<property name="password" value="${mysql.password}"></property>
</bean>

<context:annotation-config></context:annotation-config>

<!-- transaction 관리자 -->
<tx:annotation-driven/>
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<property name="dataSource" ref="authDB"></property>
</bean>
</beans>
